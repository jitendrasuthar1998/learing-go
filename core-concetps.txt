What is the Go, and what are the use case

what things i need to run go code?

Data types - string, integers, booleans, array and slices, maps, Structs

Variables and Constraints

Formatted Output

Getting and validating user input

Pointers

Variables scope

Loops

If else & switch

Functions

Organise code in go packages

Goroutines to make our app faster

Go programming language developed at Google in 2007.

Open sourced in 2009.

why another programming language?
What is the purpose?
how is it better or different?

All our code should belong to a package.

where to start executing go application.
so we have to give an entry point to start a go application.

because when we run go application, we need main starting point for execution.
where to start the program? where is the entrypoint?

if we have multiple files in project, we need to give go compiler a starting point, the first line of code where the execution start.


entrypoint is a main function, which go compiler will look whenever we execute our go application. 


Each language use case can be different.

But the basics remain same.

Like data types
declaring Variables
Operators
Looping
Conditional Statement
Comments
Printing output
Taking output from user

Functions

In Go, we have to explicitely declare the type of parameters which we are passing to any function and also the type of return value.

In Go, we can return multiple values.

Package level Variables

We can declare Variables at package level, if we need them inside different functions in that package file.

We can put different function in one package and export them by just writing their name with uppercase character.

To use that exported function, first we have to import the package where we have declared that particular function.

Scope Rules

Local

declared inside a particular function.

Package

declared outside all functions.

Global

declared with uppercase first character.
